package dao.history;
// Generated 22.11.2015 13:40:00 by Hibernate Tools 4.3.1


import dao.products.Products;
import dao.Users.Users;
import dao.shop.Shop;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * History generated by hbm2java
 */
@Entity
@Table(name="history"
    ,catalog="dbshop"
)
public class History  implements java.io.Serializable {


     private int id;
     private Products products;
     private Shop shop;
     private Users users;
     private Date when;

    public History() {
    }

    public History(int id, Products products, Shop shop, Users users, Date when) {
       this.id = id;
       this.products = products;
       this.shop = shop;
       this.users = users;
       this.when = when;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="productId", nullable=false)
    public Products getProducts() {
        return this.products;
    }
    
    public void setProducts(Products products) {
        this.products = products;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="shopId", nullable=false)
    public Shop getShop() {
        return this.shop;
    }
    
    public void setShop(Shop shop) {
        this.shop = shop;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="userId", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="when", nullable=false, length=10)
    public Date getWhen() {
        return this.when;
    }
    
    public void setWhen(Date when) {
        this.when = when;
    }




}


